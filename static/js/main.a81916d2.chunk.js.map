{"version":3,"sources":["logo.svg","serviceWorker.js","index.js","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","server","moment","locale","PromoRow","props","state","config","settings","env","jira","fields","key","url","this","promo","replace","fetch","response","json","setState","prevProps","prevState","username","password","headers","Headers","set","Buffer","from","toString","path","method","issues","find","j","customfield_12471","trim","href","customfield_12274","isSame","startDate","customfield_12470","expiryDate","subtract","prod","promoID","customfield_12382","next","target","format","title","style","bucket","partners","join","devices","colSpan","React","Component","buscarJiras","value","ok","promos","className","placeholder","type","id","onClick","categories","promotions","map","v","index","f"],"mappings":"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","file":"static/js/main.a81916d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nconst server = \"https://www.botemania.es\"\nconst promoPageLink = \"/api/config/promotions/v2/promotions-page.json\";\nmoment().locale('es')\n\n\nclass PromoRow extends React.Component{\n  constructor(props) { \n    super(props); \n    this.state = { config:{settings:{env:{}}}, jira:{fields:{}, key: null} }; \n    \n  } \n\n  componentDidMount() {\n    let url = server + this.props.promo.url.replace(\"index.html\",\"\");\n    fetch(url+\"config.json\").then(response=>response.json()).then(json => {this.setState({config: json})});\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.username != this.props.username || prevProps.password != this.props.password){\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + Buffer.from( this.props.username + \":\" + this.props.password).toString('base64'));\n\n\n        fetch(\"https://jira.gamesys.co.uk/rest/api/latest/search?jql=\\\"Path (URL) of the promotion\\\" ~ \"+ this.props.promo.path, {method:'GET', headers: headers})\n        .then(response=>response.json())\n          .then(json => {\n            if(json && json.issues && json.issues[0]){\n              this.setState({jira: json.issues.find(j=>j.fields.customfield_12471 && j.fields.customfield_12471.trim()==this.props.promo.path.trim())})\n              //this.setState({jira:  json.issues[0]});\n            }\n          });\n      }\n  }\n\n  render(){\n    return (\n      <tbody>\n        <tr>\n          <td>\n            <a href={'https://jira.gamesys.co.uk/browse/'+this.state.jira.key}>\n              {this.state.jira.key}\n            </a>\n          </td>\n          <td>\n            {this.state.jira.fields && this.state.jira.key?\n                moment(this.state.jira.fields.customfield_12274,\"YYYY-MM-DD\").isSame(moment(this.props.promo.startDate,\"DD/MM/YYYY\"))?'':'❌FI('+this.state.jira.fields.customfield_12274+')  '\n              :''}\n            {this.state.jira.fields && this.state.jira.key?\n                moment(this.state.jira.fields.customfield_12470,\"YYYY-MM-DD\").isSame(moment(this.props.promo.expiryDate,\"DD/MM/YYYY\").subtract(1,\"days\"))?'':'❌FF ('+this.state.jira.fields.customfield_12470+')  '\n              :''}\n\n            {(this.state.jira.fields && this.state.jira.key && this.state.config.settings.env.prod)?\n               this.state.config.settings.env.prod.promoID==this.state.jira.fields.customfield_12382?'':'❌ID('+this.state.jira.fields.customfield_12382+') '\n              :''}\n          </td>\n          <td>\n            {this.props.next?\n              moment(this.props.next.startDate,\"DD/MM/YYYY\")< moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")> moment()?'🔥️':\n                moment(this.props.next.startDate,\"DD/MM/YYYY\") < moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")< moment()?'🧟':\n                  moment(this.props.next.startDate,\"DD/MM/YYYY\") > moment() && moment(this.props.next.expiryDate,\"DD/MM/YYYY\")> moment()?'🔮':\n                  '🛑'\n              :''\n            }\n            {this.props.next?\n              moment(this.props.next.startDate,\"DD/MM/YYYY\").isSame(moment(this.props.promo.startDate,\"DD/MM/YYYY\").subtract(5,\"days\"),'date') && this.props.next.expiryDate==this.props.promo.startDate?'✔':\n                '✖️'\n              :''}\n\n          </td>\n          <td>\n            <a target=\"_blank\" href={server+'/promotion/'+this.props.promo.path+\"?previewDate=\"+(moment(this.props.promo.startDate,\"DD/MM/YYYY\").format(\"DD-MM-YYYY\"))}>\n              {this.props.promo.title}\n            </a>\n          </td>\n          <td>{this.state.config.settings.env.prod?this.state.config.settings.env.prod.promoID :\"\"}</td>\n          <td>\n          {moment(this.props.promo.startDate,\"DD/MM/YYYY\")< moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")> moment()?'🔥️':\n              moment(this.props.promo.startDate,\"DD/MM/YYYY\") < moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")< moment()?'🧟':\n                moment(this.props.promo.startDate,\"DD/MM/YYYY\") > moment() && moment(this.props.promo.expiryDate,\"DD/MM/YYYY\")> moment()?'🔮':\n                '🛑'\n          }\n          </td>\n          <td style={{'color':this.props.promo.startDate==this.state.config.settings.startDate?\"green\":\"red\"}} >{moment(this.props.promo.startDate,\"DD/MM/YYYY\").format(\"DD MMM YY\") }</td>\n          <td style={{'color':this.props.promo.expiryDate==this.state.config.settings.expiryDate?\"green\":\"red\"}} >{moment(this.props.promo.expiryDate,\"DD/MM/YYYY\").format(\"DD MMM YY\")}</td>\n          <td>{this.props.promo.bucket}</td>\n          <td>{this.props.promo.partners?this.props.promo.partners.join(','):''}</td>\n          <td>{this.props.promo.devices}</td>\n        </tr>\n        <tr style={{'display':'none'}}>\n          <td colSpan=\"10\">\n            hoola\n          </td>\n        </tr>\n      </tbody>\n    )\n  }\n}\n\n\n\nclass App extends React.Component { \n  \n  constructor(props) { \n      super(props); \n      this.state = { promos:{} }; \n  } \n\n  componentDidMount() {\n      fetch(server+promoPageLink).then(response=>response.json()).then(json => this.setState({promos: json}));\n  }\n\n  buscarJiras =()=>{\n\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + Buffer.from(  document.getElementById('username').value + \":\" + document.getElementById('password').value).toString('base64'));\n    fetch(\"https://jira.gamesys.co.uk/rest/api/latest/mypermissions\", {method:'GET', headers: headers}).then(\n      response=>{\n        if(response.ok)\n          this.setState({username: document.getElementById('username').value , password:document.getElementById('password').value})\n      }\n    )\n  }\n  render() { \n        \n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>BTM Promotions</h2>\n          <div>\n            <input placeholder=\"Jira username\" type=\"text\" id=\"username\"></input>\n            <input placeholder=\"Jira password\" type=\"password\" id=\"password\"></input>\n            <button onClick={this.buscarJiras}>Buscar Jiras</button>\n          </div>\n          <br></br>\n          <table>\n            <thead>\n              <tr>\n                <th>Jira</th>\n                <th>Jira Errors</th>\n                <th>Próximamente</th>\n                <th>Title</th>\n                <th>ID</th>\n                <th></th>\n                <th>Start</th>\n                <th>End</th>\n                <th>Bucket</th>\n                <th>Partner</th>\n                <th>Devices</th>\n              </tr>\n            </thead>\n            {\n              (this.state.promos.categories)?\n              this.state.promos.categories[0].promotions.map(\n                (v, index)=>{\n                  return <PromoRow key={index} username={this.state.username} password={this.state.password}  promo={v} next={this.state.promos.categories[1].promotions.find(f=> f.path == v.path)} ></PromoRow>\n                } \n              ):null\n              \n            }\n          </table>\n        </div>\n      </div>\n    );\n  } \n} \n\nexport default App;\n\n   "],"sourceRoot":""}